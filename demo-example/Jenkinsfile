pipeline {
    agent any
    environment {
        VERSION_ID = "1.0.0"
    }

    stages {
//        stage('拉取代码') {
//            steps {
//                git credentialsId: 'eadd004e-5cff-4ccd-8745-20a3d263fb5f', url: 'https://gitee.com/wudikaka/demo.git'
//                echo '拉取成功'
//            }
//        }
//        stage('执行构建') {
//            steps {
//                sh "mvn clean package -U -pl demo-example -am -Dmaven.test.skip=true"
//                echo '构建完成'
//            }
//        }

//        stage('把jar包构建为docker镜像并推送远程仓库') {
//            steps {
//                script {
//                    def jenkinsPath='/var/lib/jenkins/workspace'
//                    def dockPath="/home/konyliu/docker/demo-example"
//                    def appName='exampleApp8092'
//                    def artifactId='demo-example'
//                    def remoteServer = '120.77.58.15'
//                    def remoteUser = 'konyliu'
//                    def VERSION_ID="1.0.0"
//
//                    sshagent(['konyliu-aliyun15']) {
//                        sh """
//                            ssh ${remoteUser}@${remoteServer} '
//                            mkdir -p ${dockPath}
//                            cp ${jenkinsPath}/${artifactId}/${artifactId}/target/${appName}*.jar ${dockPath}
//                            cp ${jenkinsPath}/${artifactId}/${artifactId}/Dockerfile ${dockPath}
//                            echo "VERSION_ID: ${VERSION_ID}"
//                            old_image_id=\$(docker images | grep ${artifactId} | grep ${VERSION_ID} | awk "{print \\\$3}")
//                            echo "old_image_id: \${old_image_id}"
//                            if [[ -n "\${old_image_id}" ]]; then
//                                docker rmi -f \${old_image_id}
//                                docker image prune
//                            fi
//
//                            docker build -f ${dockPath}/Dockerfile -t ${artifactId}:${VERSION_ID} ${dockPath}
//                            image_id=\$(docker images | grep ${artifactId} | grep ${VERSION_ID} | awk "{print \\\$3}")
//
//                            docker login --username=xiaoyuma --password=Alizaq12wsx@2023_1 registry-vpc.cn-shenzhen.aliyuncs.com
//                            docker tag \${image_id} registry-vpc.cn-shenzhen.aliyuncs.com/aliyun-namespace1/aliyun-repo:${artifactId}-${VERSION_ID}
//                            docker push registry-vpc.cn-shenzhen.aliyuncs.com/aliyun-namespace1/aliyun-repo:${artifactId}-${VERSION_ID}
//                            '
//                        """
//                    }
//                    echo '推送远程仓库成功'
//                }
//            }
//        }

        stage('拉取镜像并运行') {
            steps {
                script {
                    def jenkinsPath='/var/lib/jenkins/workspace'
                    def dockPath="/home/konyliu/docker/demo-example"
                    def appName='exampleApp8092'
                    def artifactId='demo-example'
                    def remoteServer = '120.77.58.33'
                    def remoteUser = 'konyliu'
                    def VERSION_ID="1.0.0"

                    sshagent(['konyliu-aliyun33']) {
                        sh """
                            ssh ${remoteUser}@${remoteServer} '
                            mkdir -p ${dockPath}

                            '
                        """
                    }
                    echo '运行成功'
                }
            }
        }
    }
}
